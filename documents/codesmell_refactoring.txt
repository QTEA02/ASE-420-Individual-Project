Week 4-5:
First V1 Iteration
1. Dead code for class TimeRecord.
Refactoring: Remove class

2. Data Duplication was found in the create_table method in DatabaseHandler which contains the same SQL query used for table creation as a string literal and in the execute_query method.
Refactoring: Remove instances of table creation, and just have it reference the class that contains the instance.

Second V1 Iteration
3. provide_options is a lazy method in UserHandler class
Refactoring: move the method body to where the method is called

4. Inefficient algorithm in DatabaseHandler for execute_query and fetch_all
Refactoring: Revise algorithm

5. Magic numbers; the choices "1", "2", and "3" in the QueryHandler class
Refactoring: Replace 1, 2, and 3 with descriptive names

6. Mixed logic with UserHandler class, and TimeRecordRepository. UserHandler needs to handle only input logic. Violates SRP.
Refactoring: Extract output logic and move to UserHandler


Week 5-6:
V2 Iteration
7. The UserHandler class is a Large Class, as it handles display and input handling. Violates SRP.
8. The comment '#changed to get-user_input' could be more descriptive or could be removed.
9. There are print statements scattered throughout the code, specifically for outputting the queries. There could be separate handlers or methods responsible for this functionality.
10. Inconsistent Variable Naming. The use of both self. choice and task_to_do might be confusing. Consistent naming conventions improve code clarity. This goes for class names as well.
